name: buttoners

services:
  gate:
    build:
      context: ..
      dockerfile: ./deployments/Dockerfile
      args:
        BINARY_PATH: ./bin/build/gate
    restart: none
    ports:
      - 14281:14281
    environment:
      SELF_HOST: 0.0.0.0
      SELF_PORT: 14281
      AUTH_SERVICE_ADDR: http://auth:8080
      AUTH_SERVICE_TOKEN: auth-service-secret
      NOTIFICATION_SERVICE_ADDR: http://notification:8080
      NOTIFICATION_SERVICE_TOKEN: notification-service-secret
      LOG_SERVICE_ADDR: http://log:8080
      LOG_SERVICE_TOKEN: log-service-secret
    depends_on:
      - auth
      - kafka
      - notification
      - log
      - redis
      - pushgateway
      - jaeger

  auth:
    build:
      context: ..
      dockerfile: ./deployments/Dockerfile
      args:
        BINARY_PATH: ./bin/build/auth
    restart: none
    environment:
      SELF_ADDR: :8080
      SELF_TOKEN: auth-service-secret
      DB_USER: auth_user
      DB_PASS: auth_pwd
      DB_ADDR: mariadb:3306
      DB_NAME: auth_db
    depends_on:
      - mariadb
      - redis
      - pushgateway
      - jaeger

  handler:
    build:
      context: ..
      dockerfile: ./deployments/Dockerfile
      args:
        BINARY_PATH: ./bin/build/handler
    restart: none
    environment:
      KAFKA_GROUP_ID: handler
      RABBIT_MQ_USER: task
      RABBIT_MQ_PASS: task_pwd
    deploy:
      mode: replicated
      replicas: 3
    depends_on:
      - kafka
      - rabbitmq
      - pushgateway
      - jaeger

  log:
    build:
      context: ..
      dockerfile: ./deployments/Dockerfile
      args:
        BINARY_PATH: ./bin/build/log
    restart: none
    environment:
      KAFKA_GROUP_ID: log
      DB_USER: log_user
      DB_PASS: log_pwd
      DB_ADDR: clickhouse:8123
      DB_NAME: log_db
      SELF_ADDR: :8080
      SELF_TOKEN: log-service-secret
    deploy:
      mode: replicated
      replicas: 3
    depends_on:
      - kafka
      - clickhouse
      - pushgateway
      - jaeger

  worker:
    build:
      context: ..
      dockerfile: ./deployments/Dockerfile
      args:
        BINARY_PATH: ./bin/build/worker
    restart: none
    environment:
      RABBIT_MQ_USER: task
      RABBIT_MQ_PASS: task_pwd
      DB_USER: task_user
      DB_PASS: task_pwd
      DB_ADDR: clickhouse:8123
      DB_NAME: task_db
      NOTIFICATION_SERVICE_ADDR: http://notification:8080
      NOTIFICATION_SERVICE_TOKEN: notification-service-secret
    deploy:
      mode: replicated
      replicas: 2
    depends_on:
      - rabbitmq
      - notification
      - clickhouse
      - pushgateway
      - jaeger

  notification:
    build:
      context: ..
      dockerfile: ./deployments/Dockerfile
      args:
        BINARY_PATH: ./bin/build/notification
    restart: none
    environment:
      SELF_ADDR: :8080
      SELF_TOKEN: notification-service-secret
      DB_USER: notification_user
      DB_PASS: notification_pwd
      DB_ADDR: mariadb:3306
      DB_NAME: notification_db
    deploy:
      mode: replicated
      replicas: 2
    depends_on:
      - mariadb
      - pushgateway
      - jaeger

  mariadb:
    image: mariadb:11
    restart: none
    command: "--init-file /init.sql"
    environment:
      MARIADB_ROOT_PASSWORD: 12345
    volumes:
      - mariadb:/var/lib/mysql
      - ./maria-db-dev-init.sql:/init.sql
    ports:
      - 13306:3306

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    restart: none
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper-secrets:/etc/zookeeper/secrets
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-log:/var/lib/zookeeper/log

  kafka:
    image: confluentinc/cp-kafka:latest
    restart: none
    depends_on:
      - zookeeper
    volumes:
      - kafka-secrets:/etc/kafka/secrets
      - kafka-data:/var/lib/kafka/data
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  init-kafka:
    image: confluentinc/cp-kafka:latest
    restart: none
    init: true
    depends_on:
      - kafka
    command: ["/bin/sh", "-c", "/kafka.sh"]
    volumes:
      - ./inits/kafka.sh:/kafka.sh

  clickhouse:
    image: clickhouse/clickhouse-server:22.2
    restart: none
    environment:
      CLICKHOUSE_USER: admin
      CLICKHOUSE_PASSWORD: 123
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
      CLICKHOUSE_DB: default
      CLICKHOUSE_UID: 0
      CLICKHOUSE_GID: 0
    volumes:
      - clickhouse-log:/var/log/clickhouse-server
      - clickhouse-data:/var/lib/clickhouse
      - ./clickhouse-db-dev-init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - 18123:8123

  rabbitmq:
    image: rabbitmq:3.12
    restart: none
    environment:
      RABBITMQ_DEFAULT_USER: task
      RABBITMQ_DEFAULT_PASS: task_pwd
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

  redis:
    image: redis:7.2
    restart: none
    volumes:
      - redis-data:/data

  pushgateway:
    image: prom/pushgateway:v1.6.0
    restart: none

  jaeger:
    image: jaegertracing/all-in-one
    restart: none
    ports:
      - 16686:16686

  victoriametrics:
    image: victoriametrics/victoria-metrics:v1.110.0
    restart: always
    command:
      - "-retentionPeriod=7d"
      - "-promscrape.config=/etc/prometheus/prometheus.yml"
    volumes:
      - victoriametrics-data:/victoria-metrics-data
      - ./configs/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - 8428:8428
    logging:
      driver: json-file
      options:
        max-size: 1m
        max-file: 2

  grafana:
    image: grafana/grafana-oss:11.5.0
    restart: always
    user: 0:0
    volumes:
      - grafana-data:/var/lib/grafana
      - ./provisioning:/etc/grafana/provisioning
      - ./dashboards:/var/lib/grafana/dashboards
    environment:
      GF_INSTALL_PLUGINS: victoriametrics-logs-datasource
      GF_AUTH_ANONYMOUS_ENABLED: true
      GF_AUTH_ANONYMOUS_ORG_ROLE: Admin
      GF_SERVER_ROOT_URL: http://localhost:3000
    ports:
      - 3000:3000
    depends_on:
      - victoriametrics
      - victorialogs
    logging:
      driver: json-file
      options:
        max-size: 1m
        max-file: 2

  victorialogs:
    image: docker.io/victoriametrics/victoria-logs:v1.10.1-victorialogs
    restart: always
    command:
      - "-retentionPeriod=1d"
      - "-retention.maxDiskSpaceUsageBytes=100MiB"
      - "-insert.maxLineSizeBytes=1MiB"
    ports:
      - 9428:9428
    volumes:
      - victorialogs-data:/victoria-logs-data
    logging:
      driver: json-file
      options:
        max-size: 1m
        max-file: 2

  vector:
    image: docker.io/timberio/vector:0.42.X-distroless-libc
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker:/var/lib/docker
      - ./configs/vector.yml:/etc/vector/vector.yaml:ro
      - vector-data:/var/lib/vector
    user: root
    depends_on:
      - victorialogs
    logging:
      driver: json-file
      options:
        max-size: 1m
        max-file: 2

volumes:
  mariadb:
  kafka-secrets:
  kafka-data:
  zookeeper-secrets:
  zookeeper-data:
  zookeeper-log:
  clickhouse-data:
  clickhouse-log:
  rabbitmq-data:
  redis-data:
  victoriametrics-data:
  grafana-data:
  victorialogs-data:
  vector-data:
